// Бинарный поиск (binary search) - это алгоритм поиска элемента в упорядоченном списке,
// который использует метод деления пополам для уменьшения количества элементов, которые необходимо проверить.
//
//Принцип работы бинарного поиска в Java:
//
//Определить индексы начального и конечного элементов упорядоченного массива. Обычно это 0 и (длина массива - 1).
//
//Вычислить индекс среднего элемента массива, округленного вниз до целого числа. Для этого можно использовать формулу (начальный индекс + конечный индекс) / 2.
//
//Сравнить искомое значение с элементом массива, расположенным по индексу среднего элемента.
//
//Если искомое значение меньше, чем элемент по индексу среднего элемента, то переопределить конечный индекс массива на значение (средний индекс - 1) и вернуться к шагу 2.
//
//Если искомое значение больше, чем элемент по индексу среднего элемента, то переопределить начальный индекс массива на значение (средний индекс + 1) и вернуться к шагу 2.
//
//Если искомое значение равно элементу по индексу среднего элемента, то вернуть индекс среднего элемента.
//
//Если начальный индекс больше конечного, то искомый элемент отсутствует в массиве.
public class BinarySearch {

    public static void main(String[] args) {
        int[] testArray = {1, 3, 5, 7, 9};

        System.out.println(binarySearch(testArray, 3));
    }

    public static int binarySearch(int[] array, int key) {

        int low = 0;
        int high = array.length - 1;


        while (low <= high) {
            int mid = (low + high) / 2;

            if (array[mid] == key) {
                return mid;
            }
            if (key < array[mid]) {
                high = mid - 1;
            }
            if (key > array[mid]) {
                low = mid + 1;
            }
        }
        return -1;
    }

}
